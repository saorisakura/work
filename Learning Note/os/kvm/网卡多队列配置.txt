网卡多队列

多队列 Virtio网卡

Redhat的两位工程师已经实现了多队列Virtio网卡驱动程序。其使用方法如下：

1）判断内核是否支持多队列。如果命令输出为空，就表示不支持多队列。

[root@localhost ~]# grep IFF_MULTI_QUEUE /usr/include/Linux/if_tun.h





2）配置。

<interface type='bridge'>

<mac address='52:54:00:43:6e:3f'/>

<source bridge='clients'/>

<model type='Virtio'/>

<driver name='vhost' queues='N'/>

<address type='pci' domain='0x0000' bus='0x00' slot='0x04' function='0x0’/>

</interface>

N 1 - 8 最多支持8个队列

在虚拟机上执行以下命令开启多队列网卡

#ethtool -L eth0 combined M

M 1 - N M小于等于N

3）目前多队列Virtio网卡在小包转发上性能还不理想，有待优化，因此还不建议在生产环境使用。


单个 CPU 处理网络中断存在瓶颈，您可以将 ECS 实例中的网卡中断分散给不同的 CPU 处理。经测试，在网络 PPS 和网络带宽的测试中，与 1 个队列相比，2 个队列最多可提升 50% 到 1 倍，4 个队列的性能提升更大。

支持多队列的 ECS 实例规格
各种实例规格对网卡多队列的支持现状，详见 实例规格族。

支持多队列的镜像
目前，由阿里云官方提供的公共镜像中，支持多队列的镜像如下表所示。镜像是否支持多队列与操作系统的位数无关。

镜像名称	是否支持多队列？	备注
Windows 2012 R2	是	尚未公开支持，可邀测
Windows 2016	是	尚未公开支持，可邀测
CentOS 7.2	是	无
CentOS 6.8	是	无
Ubuntu 16.04	是	无
Ubuntu 14.04	是	无
Debian 8.6	是	无
SUSE Linux Enterprise Server 12 SP1	是	无
OpenSUSE 13.1	是	无
CoreOS	是	无
在 Linux ECS 实例上配置网卡多队列
推荐使用较新的 Linux 发行版（如 CentOS 7.2）配置网卡多队列。

这里以 CentOS 7.2 为例介绍如何配置网卡多队列，假设是 2 个队列，网卡 interface 名称为 eth0。

查看网卡是否支持多队列。运行命令：ethtool -l eth0。

设置网卡当前使用多队列。运行命令：ethtool -L eth0 combined 2。

对于有多个网卡的用户，可以对多个网卡分别进行设置：

[root@localhost ~]# ethtool -l eth0
Channel parameters for eth0:
Pre-set maximums:
RX: 0
TX: 0
Other: 0
Combined: 2 # 这一行表示最多支持设置2个队列
Current hardware settings:
RX: 0
TX: 0
Other: 0
Combined: 1 #表示当前生效的是1个队列
[root@localhost ~]# ethtool -L eth0 combined 2 # 设置eth0当前使用2个队列
建议开启 irqbalance 服务，让系统自动调整网卡中断在多个 CPU 核上的分配。运行命令：systemctl start irqbalance （CentOS 7.2 已默认开启）。

开启多队列后，如果网络性能提升仍不如您的预期，您可以考虑开启 RPS 特性。参考如下 Shell 脚本：

#!/bin/bash
cpu_num=$(grep -c processor /proc/cpuinfo)
quotient=$((cpu_num/8))
if [ $quotient -gt 2 ]; then
quotient=2
elif [ $quotient -lt 1 ]; then
quotient=1
fi
for i in $(seq $quotient)
do
cpuset="${cpuset}f"
done
for rps_file in $(ls /sys/class/net/eth*/queues/rx-*/rps_cpus)
do
echo $cpuset > $rps_file
done
在 Windows ECS 实例上配置网卡多队列
注意：目前，Windows 用户采用邀测的方式。Windows 系统使用网卡多队列后其网络性能也会提升，但是提升效果不如 Linux 系统。

如果您使用的是 Windows 系统，您需要下载并安装驱动程序，才能使用网卡多队列功能。

Windows 系统的驱动安装过程如下。

提交工单，索取并下载驱动安装包。

解压驱动安装包。您会看到几个文件夹，Windows 2012/2016 应使用 Win8/amd64 文件夹下的驱动。

升级网卡驱动：

选择 设备管理器 > 网络适配器；
右键单击 Red Hat VirtIO Ethernet Adapter，选择 更新驱动程序软件；
选择本地刚才解压的驱动目录的 Win8/admin64 目录，更新驱动即可。
完成驱动升级后，建议重启 Windows 系统。

至此，您就可以开始使用网卡多队列功能了。


多队列 virtio-net
多队列 virtio-net 提供了随着虚拟 CPU 数量增加而改变网络性能的方法，即允许每一次通过一组以上的 virtqueue 传输数据包。
在单一队列的 virtio-net 中，客机中协议堆叠的缩放收到限制，因为网络性能不随虚拟 CPU 数量的增加而改变。鉴于 virtio-net 只有一组 TX 和 RX 队列，客机不能并行传输或检索数据包。
多队列 virtio-net 在这些时候可以提供最佳性能：
流量数据包相对较大。
客机同时在各种连接中活跃，流量从客机、客机到主机或客户端运行到外部系统。 队列数量与虚拟 CPU 相同。因为多队列支持可以优化 RX 中断关联和 TX 队列选择，实现特定队列对于特定虚拟 CPU 的私有化。
注意

多队列 virtio-net 在输入流量中运行良好，但在少数情况下可能会影响输出流量的性能。启用多队列 virtio-net 提高总体吞吐量，同时提高 CPU 可用量。
配置多队列 virtio-net
物理NC服务器
使用多队列 virtio-net 时，通过向虚拟机 XML 配置（N 的值为 1 到 8，即 kernel 最多可支持一组多队列 tap 设备中的 8 个队列）添加以下命令：
<interface type='network'>
      <source network='default'/>
      <model type='virtio'/>
      <driver name='vhost' queues='N'/>
</interface>
虚拟机需要关闭再使用多队列virtio皮质启动才能生效
KVM guest虚拟机操作
在虚拟机内部执行以下命令（M 的值为 1 到 N）时允许多队列支持：
# ethtool -L eth0 combined M
-L --set-channels - 设置指定网络设备的通道数量（the numbers of channels）
实践
在没有设置virtio-vhost多队列之前，通过ps aux | grep vhost可以看到对应虚拟机vm-1的vhost只有2个进程（单队列有一个收网络包的进程和一个发网络包进程）（当前虚拟机qemu进程号是17060）
root     17061  0.0  0.0      0     0 ?        S    10:48   0:00 [vhost-17060-0]
root     17062  0.0  0.0      0     0 ?        S    10:48   0:00 [vhost-17060-1]
将运行中的虚拟机配置导出
virsh dumpxml vm-1 > vm-1.xml
修改vm-1.xml配置文件，在虚拟网卡配置段落的<model type='virtio'/>下面添加一行<driver name='vhost' queues='4'/>
<interface type='network'>
...
      <model type='virtio'/>
      <driver name='vhost' queues='4'/>
...
</interface>
然后启动虚拟机
virsh create vm-1.xml
此时再次ps aux | grep vhost可以看到这个虚拟机现在有了4个队列对应的8个vhost进程（当前虚拟机qemu进程号是61912）
root     61913  0.0  0.0      0     0 ?        S    11:12   0:00 [vhost-61912-0]
root     61914  0.0  0.0      0     0 ?        S    11:12   0:00 [vhost-61912-1]
root     61915  0.0  0.0      0     0 ?        S    11:12   0:00 [vhost-61912-0]
root     61916  0.0  0.0      0     0 ?        S    11:12   0:00 [vhost-61912-1]
root     61917  0.0  0.0      0     0 ?        S    11:12   0:00 [vhost-61912-0]
root     61918  0.0  0.0      0     0 ?        S    11:12   0:00 [vhost-61912-1]
root     61919  0.0  0.0      0     0 ?        S    11:12   0:00 [vhost-61912-0]
root     61920  0.0  0.0      0     0 ?        S    11:12   0:00 [vhost-61912-1]
登录到虚拟机内部，在虚拟内部没有启用多队列之前检查网卡
# ethtool -L eth0
no channel parameters changed, aborting
current values: tx 0 rx 0 other 0combined 1
使用ethtool -l eth0可以看到
# ethtool -l eth0
Channel parameters for eth0:
Pre-set maximums:
RX:        0
TX:        0
Other:        0
Combined:    4
Current hardware settings:
RX:        0
TX:        0
Other:        0
Combined:    1
-l --show-channels - 查询指定网络设备具有的通道数量。所谓通道（channel）就是一个IRQ和可以触发IRQ的队列集。
虚拟机设置多队列支持
# ethtool -L eth0 combined 2
如果没有在物理服务器上设置好多队列支持，会提示错误Cannot set device channel parameters: Invalid argument
此时再次检查可以看到虚拟网卡硬件设置队列数是2
# ethtool -l eth0
Channel parameters for eth0:
Pre-set maximums:
RX:        0
TX:        0
Other:        0
Combined:    4
Current hardware settings:
RX:        0
TX:        0
Other:        0
Combined:    2
最多可以设置4个多队列（和物理服务器上设置对应）
# ethtool -L eth0 combined 4

# ethtool -l eth0
Channel parameters for eth0:
Pre-set maximums:
RX:        0
TX:        0
Other:        0
Combined:    4
Current hardware settings:
RX:        0
TX:        0
Other:        0
Combined:    4
验证多队列生效的方法是观察中断，即cat /proc/interrupts
# cat /proc/interrupts
           CPU0       CPU1
...
 27:       1352          0   PCI-MSI-edge      virtio0-input.0
 28:          1          0   PCI-MSI-edge      virtio0-output.0
 29:        378          0   PCI-MSI-edge      virtio0-input.1
 30:          1          0   PCI-MSI-edge      virtio0-output.1
 31:        151          0   PCI-MSI-edge      virtio0-input.2
 32:          1          0   PCI-MSI-edge      virtio0-output.2
 33:        268          0   PCI-MSI-edge      virtio0-input.3
 34:          0          0   PCI-MSI-edge      virtio0-output.3
可以观察到中断分布到4个virtio0队列设备上。