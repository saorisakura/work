16位，32位，64位操作系统下，各类型的长度整理

特别是int相关的类型在不同位数机器的平台下长度不同。C99标准并不规定具体数据类型的长度大小，只规定级别。作下比较：  
（1）16位平台  
char         1个字节8位 
short        2个字节16位 
int             2个字节16位 
long         4个字节32位 
指针         2个字节16位  
（2）32位平台  
char         1个字节8位 
short        2个字节16位 
int             4个字节32位 
long         4个字节32位
long long    8个字节64位  
指针         4个字节32位  
（3）64位平台  
char     1个字节 
short     2个字节
 int                 4个字节  
long             8个字节（区别） 
long long    8个字节  
指针             8个字节（区别）

c语言中，为什么在64位系统中long跟指针的大小是8，而32位的却是4？是什么导致不一样？求详细解答
既然long 跟 指针的大小 不一样勒。
那为什么 int，long long 在32或者64位 还是一样呢？
 我来答
分享 举报 浏览 5298 次
5个回答 #灵魂拷问# 冰葬横空出世，你会怎样安排自己的死亡？
最佳答案 示申佥11 
推荐于2017-09-07
64位系统，这个位数指的是CPU 里面的通用寄存器的数据宽度为64位，也就是说一个地址占二进制位数是64，所以sizeof(double *)==sizeof(int *)==sizeof(char *)==64/8==8
32位系统，同理，他的一个地址占32位二进制空间，sizeof(double *)==sizeof(int *)==sizeof(char *)==32/8==4
其实明白了两个系统的寻址原理就能明白，大体就是这个原因。
地址跟系统有关，但是基本数据类型占的大小是由C语言本身决定。

任何类型的指针变量所占用的内存空间都是4字节即32位，因此指针变量所占用的存储空间大小是一样的，指针变量存放的值都是一个32位的地址值。但是不同类型的指针，在参与指针运算的时候是不同的。举例说明：
int *p;
char *ch;
p+1，假如p的值是1000，那么p+1的值是1004了，因为int类型是4字节的。
ch+1，假如p的值是1000，那么p+1的值是1001了，因为char类型是1字节的。

编写C/C++语言程序，必须要知道基本数据类型所占字节数，才能深刻理解数组（array）、结构体（structure）、联合体（union）等所占内存的大小（对于结构体和联合体，还需要理解字节对齐的知识）。 编写在32位和64位机器上运行的程序时，更需要了解各个类型在不同机器上的差异。

 

对比表
数据类型	32位机（字节）	64位机（字节）	备注
char

1

1

 

short

2

2

 

int

4

4

 

long

4

8

32位与64位不同

float

4

4

 

char *

4

8

其他指针类型如long *, int * 也是如此

long long

8

8

 

double

8

8

 

long double

10/12

10/16

有效位10字节。32位为了对齐实际分配12字节；64位分配16字节

 

小结
       通过上表，可以看出，对于32位和64位机器，只有long和指针类型的长度不一样，其它类型所占字节数都是一样的（long double除外，见注释）。
--------------------- 
作者：thomashtq 
来源：CSDN 
原文：https://blog.csdn.net/thomashtq/article/details/38471949 
版权声明：本文为博主原创文章，转载请附上博文链接！