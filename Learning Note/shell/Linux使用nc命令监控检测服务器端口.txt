Linux使用nc命令监控检测服务器端口

前端用apache htttpd进行发布（80端口），通过双机负载均衡转发到后端的两个tomcat进行处理（8081和8082端口），现在需要随时监控这三个端口的情况，一旦down掉需要能够立即告警处理。批量的系统监控比较好的是用nagios软件来实现，这样小项目专门装一个nagios软件，有点繁琐了。在网上查了一些资料，总结实验了一下，可以用简单的nc命令来实现。

一、nc命令检测端口的用法

# nc  -v  -w 10 %IP%   -z  %PORT%

-v  显示指令执行过程。
-w  <超时秒数>   设置等待连线的时间。
-u  表示使用UDP协议
-z  使用0输入/输出模式，只在扫描通信端口时使用。

例1：扫描指定的8080端口
# nc -v -w 10 -z 192.168.0.100 8080
Connection to 192.168.0.100 8080 port [tcp/http] succeeded!

例2：扫描20到25的端口范围，并详细输出。
# nc -v -w 2 -z 192.168.0.100 20-25
nc: connect to 192.168.0.100 port 20 (tcp) failed: Connection refused
nc: connect to 192.168.0.100 port 21 (tcp) failed: Connection refused
Connection to 192.168.0.100 22 port [tcp/ssh] succeeded!
nc: connect to 192.168.0.100 port 23 (tcp) failed: Connection refused
nc: connect to 192.168.0.100  port 24 (tcp) failed: Connection refused
nc: connect to 192.168.0.100 port 25 (tcp) failed: Connection refused

例3：扫描1到65535的端口范围，只输出打开的端口（去掉-v参数即可）
# nc -w 1 -z 192.168.0.100 1-65535
Connection to 192.168.0.100 22 port [tcp/ssh] succeeded!
Connection to 192.168.0.100 80 port [tcp/http] succeeded!
Connection to 192.168.0.100 2121 port [tcp/scientia-ssdb] succeeded!
Connection to 192.168.0.100 4004 port [tcp/pxc-roid] succeeded!
Connection to 192.168.0.100 8081 port [tcp/tproxy] succeeded!
Connection to 192.168.0.100 11211 port [tcp/*] succeeded!

二、批量检测服务器指定端口开放情况：

1、假如我们要监控一堆指定的IP和端口，可新建一个文件（第1列服务器IP，第2列要监控的端口）。
# vim /scripts/ip-ports.txt

192.168.0.100 80
192.168.0.100 8081
192.168.0.101 8082
192.168.1.100 21
2、我们可以写这样一个脚本来批量检测端口是否开放：
# vim /scripts/ncports.sh

#!/bin/bash
#检测服务器端口是否开放，成功会返回0值显示ok，失败会返回1值显示fail

cat /scripts/ip-ports.txt | while read line
do
  nc -w 10 -z $line > /dev/null 2>&1
  if [ $? -eq 0 ]
  then
    echo $line:ok
  else
    echo $line:fail
  fi
done
3、执行脚本查看运行结果如下：
# chmod a+x  /scripts/ncports.sh
# /scripts/ncports.sh
192.168.0.100 80：ok
192.168.0.100 8081：ok
192.168.0.101 8082：ok
192.168.1.100 21：fail

 

三、端口不通时设置告警：

1、 邮件告警：

(1) 先安装linux下面的邮件发送程序mutt（参见我另一篇文章《Linux下面如何用mutt命令发送邮件》

(2) 修改上面的ncports.sh检测脚本，在显示失败fail的时候增加一行：
……………………
echo $line :fail
echo “服务器 $line 端口不通，请尽快处理！” | mutt -s “【机房监控】服务器$line端口不通” test@139.com
……………………

(3) 如果上面的接收邮箱设置为移动139邮箱，并开启接收邮件短信告知，即可实现“短信告警”的功能。

2、 windows消息弹窗告警：

(1) 先打开接收消息弹窗windows客户机的“Messenger”服务，设置为“启动”

(2) 利用smbclient命令来发送消息，net脚本文件如下：
# vim /scripts/net.sh

#!/bin/bash
#/scripts/net.sh
case ”$1″ in
send)
echo ”$3″|smbclient -I ”$2″ -M `nmblookup -A ”$2″|sed -e ’1d’ -e ’3,/*/d’|cut -f2|cut -d’ ’ -f1`
;;
*)
echo ”Usage:net send <IPaddr.> <message>”
exit 1
esac
# chmod a+x /scripts/net.sh
(3) 发送消息弹窗命令测试：（发送给192.168.1.83这台win xp机子，发送内容不支持中文）
# /scripts/net.sh  send  192.168.1.83     “hello,nihao”

 

3、端口不通时发送邮件并消息弹窗告警的脚本如下：
# vim /scripts/ncports.sh

#!/bin/bash
#检测服务器端口是否开放，成功会返回0值，打不开会返回1值
cat /scripts/ip-ports.txt | while read line
do
  nc -w 10 -z $line > /dev/null 2>&1
  if [ $? -eq 0 ]
  then
    echo $line:ok
  else
    echo $line:fail
    echo ”服务器 $line 端口不通，请尽快处理！” | mutt -s ”【机房监控】服务器$line端口不通”  test@139.com
    /scripts/net send 192.168.1.83 ”The $line fail”
fi
done
4、加入任务计划每2分钟执行一次

# crontab -e

*/2 * * * *  /scripts/ncports.sh  > /dev/null 2>&1
# service crond restart