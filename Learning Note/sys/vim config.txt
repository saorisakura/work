vim tab设置为4个空格

在.vimrc中添加以下代码后，重启vim即可实现按TAB产生4个空格：
set ts=4  (注：ts是tabstop的缩写，设TAB宽4个空格)
set expandtab

对于已保存的文件，可以使用下面的方法进行空格和TAB的替换：
TAB替换为空格：
:set ts=4
:set expandtab
:%retab!

空格替换为TAB：
:set ts=4
:set noexpandtab
:%retab!

加!是用于处理非空白字符之后的TAB，即所有的TAB，若不加!，则只处理行首的TAB。

Vim实用技巧——Vim分屏技巧总结
2018年08月03日 18:51:50 Congying-Wang 阅读数：10696
 版权声明：博主才学浅薄，如有不足之处望直接指出，互相学习	https://blog.csdn.net/wcy23580/article/details/81387188
 
目录

 0  Preface

1  打开分屏

1.1  从shell 中打开

 1.2  【 常用】Vim中打开分屏

2  关闭分屏

 3  分屏操作 

0  Preface
    由于平时使用Vim比较多，每次都要同时打开多个文件进行操作，打开多个会话有比较麻烦，所以专门学习了一下有关Vim的一些分屏技巧并做此文章。

    常用的是 Vim 中打开，使用 :vs垂直打开或者 :split 水平打开

1  打开分屏
1.1  从shell 中打开
    命令： 
vim -On [FILE_1] [FILE_2] ...
vim -on [FILE_1] [FILE_2] ...
    说明：
-O：垂直分割(vertical)
-o： 水平分割（默认horizontal）
n：  表示分几个屏，可以缺省不写，默认按后面要分割的文件数来决定分几个屏
[FILE_1][FILE_2]： 需要打开文件
   示例：
如图1所示垂直分割“./ocr/main.py” 以及 “./sRGN/main.py” ，图2所示是其垂直分割结果。

图1  垂直分割示例图
 


图2  垂直分割结果示意图
如图3所示是水平分割“./ocr/main.py” 以及 “./sRGN/main.py” ，图4所示是其水平分割结果。

图3  水平分割示例图
 


图4  水平分割结果示意图
 1.2  【常用】Vim中打开分屏
命令 ：
#说明：下面命令在Vim 命令行模式下键入
 
#1. 创建空白分屏
#命令：
:new
 
#2. 打开当前文件
#命令（水平）：
[CTRL] [W]  s
 
#命令（垂直）：
[CTRL] [W]  v
 
################## 常用 ####################
 
#3. 打开任意文件
#命令（水平）：
:split [FILENAME]
#或
:sp [FILENAME]
 
#命令（垂直）：
:vsplit [FILENAME]
#或
:vs [FILENAME]
 说明：
现在水平打开当前文件的时候会间断触发（[CTRL] + s）锁定（假死）状态，不用关掉会话，使用“[CTRL] + q“即可解锁恢复正常
2  关闭分屏
命令：
#取消其它分屏，只保留当前分屏
:only 
 
#或者
[CTRL] W o
 
#退出当前所在分屏
:q
 
#或者：
:quit
 
 3  分屏操作 
命令：
命令（快捷键）	说明
[CTRL]  [W]  +	扩大窗口
[CTRL]  [W]  -	缩小窗口
[CTRL]  [W]  h	跳转到左边的窗口
[CTRL]  [W]  j	跳转到下边的窗口
[CTRL]  [W]  k	跳转到上边的窗口
[CTRL]  [W]  l	跳转到右边的窗口
[CTRL]  [W]  t	跳转到最顶上的窗口
[CTRL]  [W]  b	跳转到最顶下的窗口