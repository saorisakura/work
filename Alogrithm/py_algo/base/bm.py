#!/usr/bin/env python
# -*- encoding: utf-8 -*-
# -*- Author:Seiya -*-
import hashlib
"""
1、坏字符规则
    （1）、倒序比较主串和模式串，不匹配时记录主串得字符位置为Si，此为坏字符
    （2）、将坏字符在模式串中查找位置Xi，选择靠近模式串尾部得位置-1 <= Xi < Si（可利用哈希表实现快速查找模式串中的）
    （3）、Si - Xi 即为模式串要向后移动的长度
    （4）、当以上都不匹配时，移动整个模式串
2、好后缀规则
    （1）、倒序比较主串和模式串，不匹配时记录主串得字符位置为Si，此为坏字符
    （2）、将坏字符之前比较过的值保存成好后缀{U}，在模式串中查找是否存在{U*}
    （3）、当存在时，将{U*}移动到{U}的位置
    （4）、当不存在时，查找好后缀的后缀子串和模式串的前缀子串是否有匹配的{V}和{V*}，将{V*}移动到{V}处
    （5）、当以上都不匹配时，移动整个模式串
3、坏字符和好后缀规则需要一同使用，然后选择两者中较大的值，作为模式串滑动的长度
"""


def hash_table(str):
    """将模式串每个字符哈希化，方便查找，需要根据字符串的情况计算哈希值，主要是记录每个字符最后出现的位置"""
    pass


def bad_char(char):
    pass


def good_suffix(suffix_str):
    pass


def bm(str, substr):
    pass


str = "asdkfhkshdfbbakshdfk"
substr = "bba"
bm(str, substr)
